/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main_window;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import library.Book;
import library.Library;

/**
 * Esta clase contiene la ventana principal de la aplicacion.
 *
 * @author DAW08-TAREK
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Atributo que representa la columna seleccionada
     */
    int selectedRow = -1;
    SecondWindow sc;
    ModifyWindow md;

    /**
     * Constructor publico de la clase
     */
    public MainWindow() {
        initComponents();
        responsiveDesign();
        try {
            Library.connect();
            Library.setTittle_asc(true);
            rbAsc.setSelected(true);
            Library.setAuthor_filter("");
            updateTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgAge = new javax.swing.ButtonGroup();
        Biblioteca = new javax.swing.JLabel();
        South = new javax.swing.JLabel();
        East = new javax.swing.JLabel();
        West = new javax.swing.JLabel();
        pContains = new javax.swing.JPanel();
        pNorth = new javax.swing.JPanel();
        pTitle = new javax.swing.JPanel();
        lTtitle = new javax.swing.JLabel();
        tfTitle = new javax.swing.JTextField();
        pAuthor = new javax.swing.JPanel();
        lAuthor = new javax.swing.JLabel();
        tfAuthor = new javax.swing.JTextField();
        pCentre = new javax.swing.JPanel();
        pEditorial = new javax.swing.JPanel();
        lEditorial = new javax.swing.JLabel();
        cbEditorial = new javax.swing.JComboBox<>();
        pOption = new javax.swing.JPanel();
        pWestPanelCentre = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lFilterByAuthor = new javax.swing.JLabel();
        tfFilterByAuthor = new javax.swing.JTextField();
        pEastPanelCentre = new javax.swing.JPanel();
        pSelectOrder = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rbAsc = new javax.swing.JRadioButton();
        rbDesc = new javax.swing.JRadioButton();
        pCentrePanelCentre = new javax.swing.JPanel();
        pAge = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rbChildish = new javax.swing.JRadioButton();
        rbPlus7 = new javax.swing.JRadioButton();
        rbPlus12 = new javax.swing.JRadioButton();
        rbAdult = new javax.swing.JRadioButton();
        pLiterayStyle = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cbFantasy = new javax.swing.JCheckBox();
        cbTerror = new javax.swing.JCheckBox();
        cbComedy = new javax.swing.JCheckBox();
        cbRomance = new javax.swing.JCheckBox();
        pSouth = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        bPreviousPage = new javax.swing.JButton();
        bAdd = new javax.swing.JButton();
        bRemove = new javax.swing.JButton();
        lCurrentPage = new javax.swing.JLabel();
        bShow = new javax.swing.JButton();
        bModify = new javax.swing.JButton();
        bNextPage = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuNewDB4O = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuExport = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuImport = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuStatistics = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(800, 485));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Biblioteca.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Biblioteca.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Biblioteca.setText("BIBLIOTECA");
        Biblioteca.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        Biblioteca.setPreferredSize(new java.awt.Dimension(776, 30));
        getContentPane().add(Biblioteca, java.awt.BorderLayout.NORTH);

        South.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        South.setText(" ");
        getContentPane().add(South, java.awt.BorderLayout.SOUTH);

        East.setMaximumSize(new java.awt.Dimension(12, 14));
        East.setPreferredSize(new java.awt.Dimension(12, 14));
        getContentPane().add(East, java.awt.BorderLayout.EAST);

        West.setMaximumSize(new java.awt.Dimension(12, 14));
        West.setMinimumSize(new java.awt.Dimension(12, 14));
        West.setPreferredSize(new java.awt.Dimension(12, 14));
        getContentPane().add(West, java.awt.BorderLayout.WEST);

        pContains.setMinimumSize(new java.awt.Dimension(776, 425));
        pContains.setLayout(new java.awt.BorderLayout());

        pNorth.setMinimumSize(new java.awt.Dimension(776, 120));
        pNorth.setPreferredSize(new java.awt.Dimension(776, 80));
        pNorth.setLayout(new java.awt.BorderLayout());

        pTitle.setPreferredSize(new java.awt.Dimension(776, 40));

        lTtitle.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lTtitle.setText("Titulo:");
        lTtitle.setMaximumSize(new java.awt.Dimension(30, 30));
        lTtitle.setMinimumSize(new java.awt.Dimension(30, 30));
        lTtitle.setPreferredSize(new java.awt.Dimension(40, 30));
        pTitle.add(lTtitle);

        tfTitle.setMinimumSize(new java.awt.Dimension(6, 30));
        tfTitle.setPreferredSize(new java.awt.Dimension(350, 25));
        pTitle.add(tfTitle);

        pNorth.add(pTitle, java.awt.BorderLayout.NORTH);

        pAuthor.setPreferredSize(new java.awt.Dimension(776, 40));

        lAuthor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lAuthor.setText("Autor:");
        pAuthor.add(lAuthor);

        tfAuthor.setMinimumSize(new java.awt.Dimension(6, 30));
        tfAuthor.setPreferredSize(new java.awt.Dimension(350, 25));
        pAuthor.add(tfAuthor);

        pNorth.add(pAuthor, java.awt.BorderLayout.SOUTH);

        pContains.add(pNorth, java.awt.BorderLayout.NORTH);

        pCentre.setPreferredSize(new java.awt.Dimension(776, 175));
        pCentre.setLayout(new java.awt.BorderLayout());

        pEditorial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pEditorial.setMinimumSize(new java.awt.Dimension(776, 30));
        pEditorial.setPreferredSize(new java.awt.Dimension(776, 30));

        lEditorial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lEditorial.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lEditorial.setText("Editorial");
        lEditorial.setMaximumSize(new java.awt.Dimension(42, 20));
        lEditorial.setMinimumSize(new java.awt.Dimension(42, 20));
        lEditorial.setPreferredSize(new java.awt.Dimension(42, 20));
        pEditorial.add(lEditorial);

        cbEditorial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbEditorial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Sin seleccionar -", "Altaya", "Planeta", "Universal", "Guantanamera" }));
        pEditorial.add(cbEditorial);

        pCentre.add(pEditorial, java.awt.BorderLayout.NORTH);

        pOption.setMinimumSize(new java.awt.Dimension(776, 145));
        pOption.setPreferredSize(new java.awt.Dimension(766, 145));
        pOption.setLayout(new java.awt.BorderLayout());

        pWestPanelCentre.setMinimumSize(new java.awt.Dimension(188, 145));
        pWestPanelCentre.setPreferredSize(new java.awt.Dimension(188, 145));

        lFilterByAuthor.setText("Filtrar por autor:");

        tfFilterByAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFilterByAuthorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lFilterByAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfFilterByAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lFilterByAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(tfFilterByAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pWestPanelCentreLayout = new javax.swing.GroupLayout(pWestPanelCentre);
        pWestPanelCentre.setLayout(pWestPanelCentreLayout);
        pWestPanelCentreLayout.setHorizontalGroup(
            pWestPanelCentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pWestPanelCentreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pWestPanelCentreLayout.setVerticalGroup(
            pWestPanelCentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pWestPanelCentreLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 197, Short.MAX_VALUE))
        );

        pOption.add(pWestPanelCentre, java.awt.BorderLayout.WEST);

        pEastPanelCentre.setMinimumSize(new java.awt.Dimension(188, 145));
        pEastPanelCentre.setPreferredSize(new java.awt.Dimension(188, 145));

        jLabel3.setText("Ordenar por titulo:");

        javax.swing.GroupLayout pSelectOrderLayout = new javax.swing.GroupLayout(pSelectOrder);
        pSelectOrder.setLayout(pSelectOrderLayout);
        pSelectOrderLayout.setHorizontalGroup(
            pSelectOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pSelectOrderLayout.createSequentialGroup()
                .addGap(0, 31, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pSelectOrderLayout.setVerticalGroup(
            pSelectOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );

        rbAsc.setText("Ascendente");
        rbAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAscActionPerformed(evt);
            }
        });

        rbDesc.setText("Descendente");
        rbDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDescActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pEastPanelCentreLayout = new javax.swing.GroupLayout(pEastPanelCentre);
        pEastPanelCentre.setLayout(pEastPanelCentreLayout);
        pEastPanelCentreLayout.setHorizontalGroup(
            pEastPanelCentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pSelectOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pEastPanelCentreLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pEastPanelCentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbDesc)
                    .addComponent(rbAsc))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pEastPanelCentreLayout.setVerticalGroup(
            pEastPanelCentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pEastPanelCentreLayout.createSequentialGroup()
                .addComponent(pSelectOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbAsc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbDesc)
                .addGap(0, 141, Short.MAX_VALUE))
        );

        pOption.add(pEastPanelCentre, java.awt.BorderLayout.EAST);

        pCentrePanelCentre.setMinimumSize(new java.awt.Dimension(300, 145));
        pCentrePanelCentre.setPreferredSize(new java.awt.Dimension(300, 145));
        pCentrePanelCentre.setLayout(new java.awt.BorderLayout());

        pAge.setMinimumSize(new java.awt.Dimension(150, 145));
        pAge.setPreferredSize(new java.awt.Dimension(150, 145));
        pAge.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edad:");
        pAge.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, -1));

        bgAge.add(rbChildish);
        rbChildish.setText("Infantil");

        bgAge.add(rbPlus7);
        rbPlus7.setText("Mayores de 7 años");
        rbPlus7.setMaximumSize(new java.awt.Dimension(123, 23));
        rbPlus7.setMinimumSize(new java.awt.Dimension(123, 23));
        rbPlus7.setPreferredSize(new java.awt.Dimension(123, 23));

        bgAge.add(rbPlus12);
        rbPlus12.setText("Mayores de 12 años");

        bgAge.add(rbAdult);
        rbAdult.setText("Adultos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rbChildish, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(rbAdult, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rbPlus12, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(rbPlus7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(rbChildish)
                .addGap(5, 5, 5)
                .addComponent(rbPlus7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(rbPlus12)
                .addGap(5, 5, 5)
                .addComponent(rbAdult))
        );

        pAge.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 14, 160, 115));

        pCentrePanelCentre.add(pAge, java.awt.BorderLayout.WEST);

        pLiterayStyle.setMinimumSize(new java.awt.Dimension(150, 145));
        pLiterayStyle.setPreferredSize(new java.awt.Dimension(150, 145));
        pLiterayStyle.setLayout(new java.awt.BorderLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Estilo literario:");
        pLiterayStyle.add(jLabel2, java.awt.BorderLayout.PAGE_START);

        jPanel2.setMaximumSize(new java.awt.Dimension(150, 145));
        jPanel2.setMinimumSize(new java.awt.Dimension(150, 145));
        jPanel2.setPreferredSize(new java.awt.Dimension(150, 145));

        cbFantasy.setText("Fantasía");

        cbTerror.setText("Terror");

        cbComedy.setText("Comedía");

        cbRomance.setText("Romance");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cbFantasy, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cbTerror, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbComedy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbRomance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(cbFantasy)
                .addGap(5, 5, 5)
                .addComponent(cbTerror)
                .addGap(5, 5, 5)
                .addComponent(cbComedy)
                .addGap(5, 5, 5)
                .addComponent(cbRomance))
        );

        pLiterayStyle.add(jPanel2, java.awt.BorderLayout.CENTER);

        pCentrePanelCentre.add(pLiterayStyle, java.awt.BorderLayout.EAST);

        pOption.add(pCentrePanelCentre, java.awt.BorderLayout.CENTER);

        pCentre.add(pOption, java.awt.BorderLayout.CENTER);

        pContains.add(pCentre, java.awt.BorderLayout.CENTER);

        pSouth.setPreferredSize(new java.awt.Dimension(776, 170));
        pSouth.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo", "Autor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        pSouth.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.setPreferredSize(new java.awt.Dimension(776, 40));

        bPreviousPage.setText("<-  Prev. Pag");
        bPreviousPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPreviousPageActionPerformed(evt);
            }
        });
        jPanel3.add(bPreviousPage);

        bAdd.setText("Añadir");
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });
        jPanel3.add(bAdd);

        bRemove.setText("Eliminar");
        bRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoveActionPerformed(evt);
            }
        });
        jPanel3.add(bRemove);

        lCurrentPage.setText("Pag. 1  de 1");
        jPanel3.add(lCurrentPage);

        bShow.setText("Mostrar");
        bShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bShowActionPerformed(evt);
            }
        });
        jPanel3.add(bShow);

        bModify.setText("Modificar");
        bModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModifyActionPerformed(evt);
            }
        });
        jPanel3.add(bModify);

        bNextPage.setText("Sig. Pag ->");
        bNextPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNextPageActionPerformed(evt);
            }
        });
        jPanel3.add(bNextPage);

        pSouth.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        pContains.add(pSouth, java.awt.BorderLayout.SOUTH);

        getContentPane().add(pContains, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Funcionalidades");

        jMenuNewDB4O.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuNewDB4O.setText("Nuevo archivo");
        jMenuNewDB4O.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNewDB4OActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuNewDB4O);
        jMenu1.add(jSeparator2);

        jMenuExport.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuExport.setText("Exportar biblioteca");
        jMenuExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExportActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuExport);
        jMenu1.add(jSeparator1);

        jMenuImport.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuImport.setText("Importar biblioteca");
        jMenuImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuImportActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuImport);
        jMenu1.add(jSeparator3);

        jMenuStatistics.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuStatistics.setText("Estadísticas");
        jMenuStatistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuStatisticsActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuStatistics);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Con este metodo se añaden los registros a la tabla, una vez añadidos el
     * registro los campos son limpiados
     *
     * @param evt representa la accion de pulsar el boton
     */
    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed
        try {
            Book aBook = new Book();
            aBook.setTitle(tfTitle.getText());
            aBook.setAuthor(tfAuthor.getText());
            aBook.setEditorial(cbEditorial.getSelectedItem().toString());
            aBook.setAge(getSelectedAge());
            aBook.setGenres(getSelectedLiteraryStyle());
            if (aBook.isValid() == false) {
                JOptionPane.showMessageDialog(this, "Modifique datos incorrectos - ERROR 302 campos_vacios", "Error", JOptionPane.WARNING_MESSAGE);
            } else {
                Library.saveBook(aBook);
                updateTable();
                clean();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_bAddActionPerformed

    /**
     * Metodo privado para eliminar registros de la fila, lanzando panel en caso
     * de no tener nignuna fila seleccionada
     *
     * @param evt representa la accion de pulsar el boton
     */
    private void bRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoveActionPerformed
        try {
            DefaultTableModel tableData = (DefaultTableModel) jTable1.getModel();
            if (jTable1.getSelectedRow() >= -1) {
                int resp = JOptionPane.showConfirmDialog(this, "¿Esta seguro?", Library.getBook(jTable1.getSelectedRow()).getTitle(), JOptionPane.YES_NO_OPTION);
                if (resp == 0) {
                    Library.deleteBook(jTable1.getSelectedRow());
                    updateTable();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ninguna fila seleccionada - ERROR 551", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_bRemoveActionPerformed

    /**
     * Con este metodo conseguimos exportar los datos contenidos en la lista,
     * filtrando por archivos binarios
     *
     * @param evt provocado por pulsar el boton
     */
    private void jMenuExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExportActionPerformed
        JFileChooser fileSelector = new JFileChooser();

        fileSelector.setDialogTitle("Guardar un fichero");
        fileSelector.setAcceptAllFileFilterUsed(false);

        FileNameExtensionFilter dat = new FileNameExtensionFilter("Ficheros binarios", "dat");
        fileSelector.addChoosableFileFilter(dat);

        int result = fileSelector.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            String path = fileSelector.getSelectedFile().getAbsolutePath();
            if (!path.endsWith(".dat")) {
                path += ".dat";
            }
            System.out.println(path);
            try {
                Library.writeFile(path);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Imposible escribir el fichero");
            }
        }

    }//GEN-LAST:event_jMenuExportActionPerformed

    /**
     * Con este metodo conseguimos exportar los datos contenidos en la lista,
     * filtrando por archivos binarios
     *
     * @param evt provocado por pulsar el boton
     */
    private void jMenuImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuImportActionPerformed
        JFileChooser fileSelector = new JFileChooser();

        fileSelector.setDialogTitle("Abrir un fichero");
        fileSelector.setAcceptAllFileFilterUsed(false);

        FileNameExtensionFilter dat = new FileNameExtensionFilter("Ficheros binarios", "dat");
        fileSelector.addChoosableFileFilter(dat);

        int result = fileSelector.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            String path = fileSelector.getSelectedFile().getAbsolutePath();
            System.out.println(path);
            try {
                Library.readFile(path);
                updateTable();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Imposible leer el fichero");
            }
        }
    }//GEN-LAST:event_jMenuImportActionPerformed

    /**
     * Metodo privado que no devuelve nada y que se encarga de mostrar los datos
     * contenidos en la lista
     *
     * @param evt provocado al pulsar el boton
     */
    private void bShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bShowActionPerformed
        try {
            if (jTable1.getSelectedRow() > -1) {
                sc = new SecondWindow();
                sc.showBook(Library.getBook(jTable1.getSelectedRow()));
            } else {
                JOptionPane.showMessageDialog(this, "Ninguna fila seleccionada - ERROR 551", "Error", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_bShowActionPerformed

    /**
     * Metodo que no devuelve nada y se encarga de cerrar los frames
     *
     * @param evt provocado por la accion de cerrar la ventana
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            Library.disconnet();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_formWindowClosing
    /**
     * Metodo privado, no devuelve nada y responde al evento de presionar la el
     * boton, muestra un nuevo frame para modifricar
     *
     * @param evt presionar el boton
     */
    private void bModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModifyActionPerformed
        try {
            if (jTable1.getSelectedRow() >= 0) {
                selectedRow = jTable1.getSelectedRow();
                md = new ModifyWindow(this, Library.getBook(selectedRow));
            } else {
                JOptionPane.showMessageDialog(this, "Ninguna fila seleccionada - ERROR 551", "Error", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_bModifyActionPerformed
    /**
     * Metodo privado que no devuelve nada, y responde a la accion de pulsar el
     * radiobuton para la eleccion, seteando la eleccion de como ordenar la
     * libreria a true, y poniendo a false el otro boton para evitar que dos
     * esten selccionados a la vez
     *
     * @param evt pulsar el radiobuton
     */
    private void rbAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAscActionPerformed
        try {
            Library.setTittle_asc(true);
            updateTable();
            rbDesc.setSelected(false);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_rbAscActionPerformed
    /**
     * Metodo privado que no devuelve nada, y responde a la accion de pulsar el
     * radiobuton para la eleccion, seteando la eleccion de como ordenar la
     * libreria a false, y poniendo a false el otro boton para evitar que dos
     * esten selccionados a la vez
     *
     * @param evt pulsar el radiobuton
     */
    private void rbDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDescActionPerformed
        try {
            Library.setTittle_asc(false);
            updateTable();
            rbAsc.setSelected(false);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_rbDescActionPerformed
    /**
     * Este metodo privado no devuelve nada, intenta recoger el texto que se
     * introfuce en el textfield y pasarselo al metodo que setea el filtro del
     * author en Library, postriomente actualzia la tabla
     *
     * @param evt esribir los valores a filtrar
     */
    private void tfFilterByAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFilterByAuthorActionPerformed
        try {
            Library.setAuthor_filter(tfFilterByAuthor.getText());
            updateTable();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_tfFilterByAuthorActionPerformed
    /**
     * Este metodo privado no devuelve nada y llama al metodo para incremenetar
     * una pagina cuando se acciona el evento
     *
     * @param evt pulsar el boton de siguiente
     */
    private void bNextPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNextPageActionPerformed
        Library.increasePage();
        updateTable();
    }//GEN-LAST:event_bNextPageActionPerformed
    /**
     * Este metodo privado no devuelve nada y llama al metodo para decrementar
     * una pagina cuando se acciona el evento
     *
     * @param evt pulsar el boton de siguiente
     */
    private void bPreviousPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPreviousPageActionPerformed
        Library.decreasePage();
        updateTable();
    }//GEN-LAST:event_bPreviousPageActionPerformed
    /**
     * Este metodo es privado y no devuelve nada, se encarga de borrar todos los
     * libros almacenados en la clase Library
     *
     * @param evt responde a la presion del boton
     */
    private void jMenuNewDB4OActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNewDB4OActionPerformed
        try {
            Library.deleteAll();
            updateTable();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jMenuNewDB4OActionPerformed
    /**
     * Se encarga de inicilizar la second window pasandole como referencia esta
     * ventana, ademas setea la visibilidad a true
     *
     * @param evt responde a la accion de presionar el boton
     */
    private void jMenuStatisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuStatisticsActionPerformed
        StadisticsWindow sw = new StadisticsWindow(this);
        sw.setVisible(true);
    }//GEN-LAST:event_jMenuStatisticsActionPerformed

    /**
     * Metodo para limpiar los registros una vez añadidos y dejar puesto el
     * "objetivo" en el textField de titulo
     */
    private void clean() {
        tfTitle.setText("");
        tfAuthor.setText("");
        cbEditorial.setSelectedIndex(0);
        bgAge.clearSelection();
        cbFantasy.setSelected(false);
        cbTerror.setSelected(false);
        cbComedy.setSelected(false);
        cbRomance.setSelected(false);
        tfTitle.grabFocus();
    }

    /**
     * Metodo privado que no devuelve nada, ajusta la ventana al centro y el
     * tamaño respectivo de la resolucion del monitor
     */
    private void responsiveDesign() {
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        int height = pantalla.height;
        int width = pantalla.width;
        setSize(width / 2, height / 2);
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * Metodo de visibilidad privata que se encarga de seleccionar una edad,
     * cuando es añadido se limpia la seleccion del grupo
     *
     * @return un string que sera equivalente a al edad seleccionada mediante el
     * boton
     */
    private String getSelectedAge() {
        String selectedAge = "";
        if (rbChildish.isSelected()) {
            selectedAge = "Infantil";
        } else if (rbPlus7.isSelected()) {
            selectedAge = "Mayores de 7 años";
        } else if (rbPlus12.isSelected()) {
            selectedAge = "Mayores de 12";
        } else if (rbAdult.isSelected()) {
            selectedAge = "Adultos";
        }
        return selectedAge;
    }

    /**
     * Metodo que devuelve una lista con las selecciones que realiza el
     * ususario, ademas se ha implemtendado la funcionalidad para dejar vacio en
     * check una vez cargado el libro
     *
     * @return la lista de valores seleccionada
     */
    private ArrayList<String> getSelectedLiteraryStyle() {
        ArrayList<String> selectedStyle = new ArrayList<>();
        if (cbFantasy.isSelected()) {
            selectedStyle.add(cbFantasy.getText());
        }
        if (cbTerror.isSelected()) {
            selectedStyle.add(cbTerror.getText());
        }
        if (cbComedy.isSelected()) {
            selectedStyle.add(cbComedy.getText());
        }
        if (cbRomance.isSelected()) {
            selectedStyle.add(cbRomance.getText());
        }

        return selectedStyle;
    }

    /**
     * Metodo publico que no devuelve nada y que actuliza la tabla, setea los
     * registros a cero y mediante un for each recorre añadiendo las nuevas
     * filas
     *
     */
    public void updateTable() {
        DefaultTableModel tableData = (DefaultTableModel) jTable1.getModel();
        tableData.setRowCount(0);
        try {
            for (Book book : Library.getBooks()) {
                tableData.addRow(book.toArray());
            }
            lCurrentPage.setText(Library.getCurrent_pageAsString());
            bNextPage.setEnabled(Library.inLastPage());
            bPreviousPage.setEnabled(Library.inFirstPage());
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(false);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Biblioteca;
    private javax.swing.JLabel East;
    private javax.swing.JLabel South;
    private javax.swing.JLabel West;
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bModify;
    private javax.swing.JButton bNextPage;
    private javax.swing.JButton bPreviousPage;
    private javax.swing.JButton bRemove;
    private javax.swing.JButton bShow;
    public javax.swing.ButtonGroup bgAge;
    private javax.swing.JCheckBox cbComedy;
    private javax.swing.JComboBox<String> cbEditorial;
    private javax.swing.JCheckBox cbFantasy;
    private javax.swing.JCheckBox cbRomance;
    private javax.swing.JCheckBox cbTerror;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuExport;
    private javax.swing.JMenuItem jMenuImport;
    private javax.swing.JMenuItem jMenuNewDB4O;
    private javax.swing.JMenuItem jMenuStatistics;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lAuthor;
    private javax.swing.JLabel lCurrentPage;
    private javax.swing.JLabel lEditorial;
    private javax.swing.JLabel lFilterByAuthor;
    private javax.swing.JLabel lTtitle;
    private javax.swing.JPanel pAge;
    private javax.swing.JPanel pAuthor;
    private javax.swing.JPanel pCentre;
    private javax.swing.JPanel pCentrePanelCentre;
    private javax.swing.JPanel pContains;
    private javax.swing.JPanel pEastPanelCentre;
    private javax.swing.JPanel pEditorial;
    private javax.swing.JPanel pLiterayStyle;
    private javax.swing.JPanel pNorth;
    private javax.swing.JPanel pOption;
    private javax.swing.JPanel pSelectOrder;
    private javax.swing.JPanel pSouth;
    private javax.swing.JPanel pTitle;
    private javax.swing.JPanel pWestPanelCentre;
    private javax.swing.JRadioButton rbAdult;
    private javax.swing.JRadioButton rbAsc;
    private javax.swing.JRadioButton rbChildish;
    private javax.swing.JRadioButton rbDesc;
    private javax.swing.JRadioButton rbPlus12;
    private javax.swing.JRadioButton rbPlus7;
    private javax.swing.JTextField tfAuthor;
    private javax.swing.JTextField tfFilterByAuthor;
    private javax.swing.JTextField tfTitle;
    // End of variables declaration//GEN-END:variables
}
