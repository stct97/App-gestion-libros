/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main_window;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import library.Book;
import library.Library;

/**
 * Esta clase contiene la ventana de modificacion de la aplicacion.
 *
 * @author DAW08-TAREK
 */
public class ModifyWindow extends javax.swing.JFrame {

    /**
     * Instancias de las clases MainWindow y Book
     */
    MainWindow mw;
    Book book;

    /**
     * Constructor publico de la clase
     *
     * @param mw recibe un objeto de dicha clase
     * @param book objeto recibido de la clase
     */
    public ModifyWindow(MainWindow mw, Book book) {
        initComponents();
        responsiveDesign();
        this.mw = mw;
        this.book = book;
        chargerData(book);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgAge = new javax.swing.ButtonGroup();
        Biblioteca = new javax.swing.JLabel();
        South = new javax.swing.JLabel();
        East = new javax.swing.JLabel();
        West = new javax.swing.JLabel();
        pContains = new javax.swing.JPanel();
        pNorth = new javax.swing.JPanel();
        pTitle = new javax.swing.JPanel();
        lTtitle = new javax.swing.JLabel();
        tfTitle = new javax.swing.JTextField();
        pAuthor = new javax.swing.JPanel();
        lAuthor = new javax.swing.JLabel();
        tfAuthor = new javax.swing.JTextField();
        pCentre = new javax.swing.JPanel();
        pEditorial = new javax.swing.JPanel();
        lEditorial = new javax.swing.JLabel();
        cbEditorial = new javax.swing.JComboBox<>();
        pOption = new javax.swing.JPanel();
        pWestPanelCentre = new javax.swing.JPanel();
        pEastPanelCentre = new javax.swing.JPanel();
        pCentrePanelCentre = new javax.swing.JPanel();
        pAge = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rbChildish = new javax.swing.JRadioButton();
        rbPlus7 = new javax.swing.JRadioButton();
        rbPlus12 = new javax.swing.JRadioButton();
        rbAdult = new javax.swing.JRadioButton();
        pLiterayStyle = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cbFantasy = new javax.swing.JCheckBox();
        cbTerror = new javax.swing.JCheckBox();
        cbComedy = new javax.swing.JCheckBox();
        cbRomance = new javax.swing.JCheckBox();
        pSouth = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        bAcept = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(800, 485));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Biblioteca.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Biblioteca.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Biblioteca.setText("BIBLIOTECA");
        Biblioteca.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        Biblioteca.setPreferredSize(new java.awt.Dimension(776, 30));
        getContentPane().add(Biblioteca, java.awt.BorderLayout.NORTH);

        South.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        South.setText(" ");
        getContentPane().add(South, java.awt.BorderLayout.SOUTH);

        East.setMaximumSize(new java.awt.Dimension(12, 14));
        East.setPreferredSize(new java.awt.Dimension(12, 14));
        getContentPane().add(East, java.awt.BorderLayout.EAST);

        West.setMaximumSize(new java.awt.Dimension(12, 14));
        West.setMinimumSize(new java.awt.Dimension(12, 14));
        West.setPreferredSize(new java.awt.Dimension(12, 14));
        getContentPane().add(West, java.awt.BorderLayout.WEST);

        pContains.setMinimumSize(new java.awt.Dimension(776, 425));
        pContains.setLayout(new java.awt.BorderLayout());

        pNorth.setMinimumSize(new java.awt.Dimension(776, 120));
        pNorth.setPreferredSize(new java.awt.Dimension(776, 80));
        pNorth.setLayout(new java.awt.BorderLayout());

        pTitle.setPreferredSize(new java.awt.Dimension(776, 40));

        lTtitle.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lTtitle.setText("Titulo:");
        lTtitle.setMaximumSize(new java.awt.Dimension(30, 30));
        lTtitle.setMinimumSize(new java.awt.Dimension(30, 30));
        lTtitle.setPreferredSize(new java.awt.Dimension(40, 30));
        pTitle.add(lTtitle);

        tfTitle.setMinimumSize(new java.awt.Dimension(6, 30));
        tfTitle.setPreferredSize(new java.awt.Dimension(350, 25));
        pTitle.add(tfTitle);

        pNorth.add(pTitle, java.awt.BorderLayout.NORTH);

        pAuthor.setPreferredSize(new java.awt.Dimension(776, 40));

        lAuthor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lAuthor.setText("Autor:");
        pAuthor.add(lAuthor);

        tfAuthor.setMinimumSize(new java.awt.Dimension(6, 30));
        tfAuthor.setPreferredSize(new java.awt.Dimension(350, 25));
        pAuthor.add(tfAuthor);

        pNorth.add(pAuthor, java.awt.BorderLayout.SOUTH);

        pContains.add(pNorth, java.awt.BorderLayout.NORTH);

        pCentre.setPreferredSize(new java.awt.Dimension(776, 175));
        pCentre.setLayout(new java.awt.BorderLayout());

        pEditorial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pEditorial.setMinimumSize(new java.awt.Dimension(776, 30));
        pEditorial.setPreferredSize(new java.awt.Dimension(776, 30));

        lEditorial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lEditorial.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lEditorial.setText("Editorial");
        lEditorial.setMaximumSize(new java.awt.Dimension(42, 20));
        lEditorial.setMinimumSize(new java.awt.Dimension(42, 20));
        lEditorial.setPreferredSize(new java.awt.Dimension(42, 20));
        pEditorial.add(lEditorial);

        cbEditorial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbEditorial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Sin seleccionar -", "Altaya", "Planeta", "Universal", "Guantanamera" }));
        pEditorial.add(cbEditorial);

        pCentre.add(pEditorial, java.awt.BorderLayout.NORTH);

        pOption.setMinimumSize(new java.awt.Dimension(776, 145));
        pOption.setPreferredSize(new java.awt.Dimension(766, 145));
        pOption.setLayout(new java.awt.BorderLayout());

        pWestPanelCentre.setMinimumSize(new java.awt.Dimension(188, 145));
        pWestPanelCentre.setPreferredSize(new java.awt.Dimension(188, 145));
        pOption.add(pWestPanelCentre, java.awt.BorderLayout.WEST);

        pEastPanelCentre.setMinimumSize(new java.awt.Dimension(188, 145));
        pEastPanelCentre.setPreferredSize(new java.awt.Dimension(188, 145));
        pOption.add(pEastPanelCentre, java.awt.BorderLayout.EAST);

        pCentrePanelCentre.setMinimumSize(new java.awt.Dimension(300, 145));
        pCentrePanelCentre.setPreferredSize(new java.awt.Dimension(300, 145));
        pCentrePanelCentre.setLayout(new java.awt.BorderLayout());

        pAge.setMinimumSize(new java.awt.Dimension(150, 145));
        pAge.setPreferredSize(new java.awt.Dimension(150, 145));
        pAge.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edad:");
        pAge.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, -1));

        bgAge.add(rbChildish);
        rbChildish.setText("Infantil");

        bgAge.add(rbPlus7);
        rbPlus7.setText("Mayores de 7 años");
        rbPlus7.setMaximumSize(new java.awt.Dimension(123, 23));
        rbPlus7.setMinimumSize(new java.awt.Dimension(123, 23));
        rbPlus7.setPreferredSize(new java.awt.Dimension(123, 23));

        bgAge.add(rbPlus12);
        rbPlus12.setText("Mayores de 12 años");

        bgAge.add(rbAdult);
        rbAdult.setText("Adultos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rbChildish, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(rbAdult, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rbPlus12, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(rbPlus7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(rbChildish)
                .addGap(5, 5, 5)
                .addComponent(rbPlus7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(rbPlus12)
                .addGap(5, 5, 5)
                .addComponent(rbAdult))
        );

        pAge.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 14, 160, 115));

        pCentrePanelCentre.add(pAge, java.awt.BorderLayout.WEST);

        pLiterayStyle.setMinimumSize(new java.awt.Dimension(150, 145));
        pLiterayStyle.setPreferredSize(new java.awt.Dimension(150, 145));
        pLiterayStyle.setLayout(new java.awt.BorderLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Estilo literario:");
        pLiterayStyle.add(jLabel2, java.awt.BorderLayout.PAGE_START);

        jPanel2.setMaximumSize(new java.awt.Dimension(150, 145));
        jPanel2.setMinimumSize(new java.awt.Dimension(150, 145));
        jPanel2.setPreferredSize(new java.awt.Dimension(150, 145));

        cbFantasy.setText("Fantasía");

        cbTerror.setText("Terror");

        cbComedy.setText("Comedía");

        cbRomance.setText("Romance");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cbFantasy, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cbTerror, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbComedy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbRomance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(cbFantasy)
                .addGap(5, 5, 5)
                .addComponent(cbTerror)
                .addGap(5, 5, 5)
                .addComponent(cbComedy)
                .addGap(5, 5, 5)
                .addComponent(cbRomance))
        );

        pLiterayStyle.add(jPanel2, java.awt.BorderLayout.CENTER);

        pCentrePanelCentre.add(pLiterayStyle, java.awt.BorderLayout.EAST);

        pOption.add(pCentrePanelCentre, java.awt.BorderLayout.CENTER);

        pCentre.add(pOption, java.awt.BorderLayout.CENTER);

        pContains.add(pCentre, java.awt.BorderLayout.CENTER);

        pSouth.setPreferredSize(new java.awt.Dimension(776, 170));
        pSouth.setLayout(new java.awt.BorderLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(776, 40));

        bAcept.setText("Aceptar");
        bAcept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAceptActionPerformed(evt);
            }
        });
        jPanel3.add(bAcept);

        bCancel.setText("Cancelar");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });
        jPanel3.add(bCancel);

        pSouth.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        pContains.add(pSouth, java.awt.BorderLayout.SOUTH);

        getContentPane().add(pContains, java.awt.BorderLayout.CENTER);
        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo que no devuelve nada y se encarga de cerrar los frames
     *
     * @param evt provocado por la accion de cerrar la ventana
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            mw.setVisible(true);
            this.setDefaultCloseOperation(ModifyWindow.DO_NOTHING_ON_CLOSE);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_formWindowClosing
    /**
     * Metodo que de ser presionado añade un libro y machaca los campos que ha
     * mostrado siempre que los nuevos valores sean validos
     *
     * @param evt de presionar el boton
     */
    private void bAceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAceptActionPerformed
        book.setTitle(tfTitle.getText());
        book.setAuthor(tfAuthor.getText());
        book.setEditorial(cbEditorial.getSelectedItem().toString());
        book.setAge(getSelectedAge());
        book.setGenres(getSelectedLiteraryStyle());
        if (!book.isValid()) {
            JOptionPane.showMessageDialog(this, "Modifique datos incorrectos - ERROR 302 campos_vacios", "Error", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                Library.saveBook(book);
                mw.updateTable();
                dispose();
            } catch (Exception e) {
                System.out.println(e);
            }
        }

    }//GEN-LAST:event_bAceptActionPerformed
    /**
     * Oculta la ventana cuando ocurre el evt
     *
     * @param evt presionar boton cancelar en el frame
     */
    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        dispose();
    }//GEN-LAST:event_bCancelActionPerformed
    /**
     * Metodo privado, no devuelve nada y recibe como parametro el atributo
     * libro de la clase
     *
     * @param book atributos libro recibido
     */
    private void chargerData(Book book) {
        tfTitle.setText(book.getTitle());
        tfAuthor.setText(book.getAuthor());
        cbEditorial.setSelectedItem(book.getEditorial());
        setSelectedRadioButon();
        setSelectedCheckBox();
    }

    /**
     * Metodo privado que no devuelve nada y se encarga de setear a true los
     * valores correspondientes seleccionados
     */
    private void setSelectedRadioButon() {
        String age = book.getAge();
        if ("Infantil".equals(age)) {
            rbChildish.setSelected(true);
        }
        if ("Mayores de 7 años".equals(age)) {
            rbPlus7.setSelected(true);
        }
        if ("Mayores de 12 años".equals(age)) {
            rbPlus7.setSelected(true);
        }
        if ("Adultos".equals(age)) {
            rbAdult.setSelected(true);
        }
    }

    /**
     * Metodo privado que no devuelve nada y se encarga de recoger y poner a
     * true los valores del checkbox señalados
     */
    private void setSelectedCheckBox() {
        ArrayList<String> genresList = book.getGenres();
        genresList.stream().map((genres) -> {
            if ("Fantasía".equals(genres)) {
                cbFantasy.setSelected(true);
            }
            return genres;
        }).map((genres) -> {
            if ("Terror".equals(genres)) {
                cbTerror.setSelected(true);
            }
            return genres;
        }).map((genres) -> {
            if ("Comedía".equals(genres)) {
                cbComedy.setSelected(true);
            }
            return genres;
        }).filter((genres) -> ("Romance".equals(genres))).forEachOrdered((_item) -> {
            cbRomance.setSelected(true);
        });
    }

    /**
     * Metodo que devuelve una lista con las selecciones que realiza el
     * ususario.
     *
     * @return la lista de valores seleccionada
     */
    private String getSelectedAge() {
        String selectedAge = "";
        if (rbChildish.isSelected()) {
            selectedAge = "Infantil";
        } else if (rbPlus7.isSelected()) {
            selectedAge = "Mayores de 7 años";
        } else if (rbPlus12.isSelected()) {
            selectedAge = "Mayores de 12";
        } else if (rbAdult.isSelected()) {
            selectedAge = "Adultos";
        }
        return selectedAge;
    }

    /**
     * Metodo que devuelve una lista con las selecciones que realiza el
     * ususario, ademas se ha implemtendado la funcionalidad para dejar vacio en
     * check una vez cargado el libro
     *
     * @return la lista de valores seleccionada
     */
    private ArrayList<String> getSelectedLiteraryStyle() {
        ArrayList<String> selectedStyle = new ArrayList<>();
        if (cbFantasy.isSelected()) {
            selectedStyle.add(cbFantasy.getText());
        }
        if (cbTerror.isSelected()) {
            selectedStyle.add(cbTerror.getText());
        }
        if (cbComedy.isSelected()) {
            selectedStyle.add(cbComedy.getText());
        }
        if (cbRomance.isSelected()) {
            selectedStyle.add(cbRomance.getText());
        }

        return selectedStyle;
    }

    /**
     * Metodo para limpiar los registros una vez añadidos y dejar puesto el
     * "objetivo" en el textField de titulo
     */
    private void clean() {
        tfTitle.setText("");
        tfAuthor.setText("");
        cbEditorial.setSelectedIndex(0);
        bgAge.clearSelection();
        cbFantasy.setSelected(false);
        cbTerror.setSelected(false);
        cbComedy.setSelected(false);
        cbRomance.setSelected(false);
        tfTitle.grabFocus();
    }

    /**
     * Metodo privado que no devuelve nada, ajusta la ventana al centro y el
     * tamaño respectivo de la resolucion del monitor
     */
    private void responsiveDesign() {
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        int height = pantalla.height;
        int width = pantalla.width;
        setSize(width / 2, height / 2);
        setLocationRelativeTo(null);
        setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Biblioteca;
    private javax.swing.JLabel East;
    private javax.swing.JLabel South;
    private javax.swing.JLabel West;
    private javax.swing.JButton bAcept;
    private javax.swing.JButton bCancel;
    public javax.swing.ButtonGroup bgAge;
    private javax.swing.JCheckBox cbComedy;
    private javax.swing.JComboBox<String> cbEditorial;
    private javax.swing.JCheckBox cbFantasy;
    private javax.swing.JCheckBox cbRomance;
    private javax.swing.JCheckBox cbTerror;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lAuthor;
    private javax.swing.JLabel lEditorial;
    private javax.swing.JLabel lTtitle;
    private javax.swing.JPanel pAge;
    private javax.swing.JPanel pAuthor;
    private javax.swing.JPanel pCentre;
    private javax.swing.JPanel pCentrePanelCentre;
    private javax.swing.JPanel pContains;
    private javax.swing.JPanel pEastPanelCentre;
    private javax.swing.JPanel pEditorial;
    private javax.swing.JPanel pLiterayStyle;
    private javax.swing.JPanel pNorth;
    private javax.swing.JPanel pOption;
    private javax.swing.JPanel pSouth;
    private javax.swing.JPanel pTitle;
    private javax.swing.JPanel pWestPanelCentre;
    private javax.swing.JRadioButton rbAdult;
    private javax.swing.JRadioButton rbChildish;
    private javax.swing.JRadioButton rbPlus12;
    private javax.swing.JRadioButton rbPlus7;
    private javax.swing.JTextField tfAuthor;
    private javax.swing.JTextField tfTitle;
    // End of variables declaration//GEN-END:variables
}
